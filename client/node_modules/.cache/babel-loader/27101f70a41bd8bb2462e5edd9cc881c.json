{"ast":null,"code":"var _jsxFileName = \"/Users/tavasyaagarwal/Desktop/Code/Spotinfo/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst SpotifyWebApi = new Spotify();\n\nclass App extends React.Component {\n  constructor() {\n    // this gives us an object that has access and refresh tokens:\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: 'Not checked',\n        image: ''\n      }\n    };\n\n    if (params.access_token) {\n      SpotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    SpotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0]\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \" Log in with Spotify \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \" Now Playing: \", this.state.nowPlaying.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Check what's playing!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tavasyaagarwal/Desktop/Code/Spotinfo/client/src/App.js"],"names":["React","Spotify","SpotifyWebApi","App","Component","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","image","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","render","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAEA,MAAME,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;AACA;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACE,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEH,MAAM,CAACI,YAAP,GAAsB,IAAtB,GAA6B,KAD5B;AAEXC,MAAAA,UAAU,EAAE;AACXC,QAAAA,IAAI,EAAE,aADK;AAEXC,QAAAA,KAAK,EAAE;AAFI;AAFD,KAAb;;AAOF,QAAIP,MAAM,CAACI,YAAX,EAAwB;AACtBR,MAAAA,aAAa,CAACY,cAAd,CAA6BR,MAAM,CAACI,YAApC;AACD;AACF;;AAEDH,EAAAA,aAAa,GAAG;AACd,QAAIQ,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;;AAEA,WAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAuB;AACpBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACF;;AACD,WAAOD,UAAP;AACD;;AAEDU,EAAAA,aAAa,GAAG;AACdvB,IAAAA,aAAa,CAACwB,yBAAd,GACGC,IADH,CACSC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AACZlB,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAEgB,QAAQ,CAACE,IAAT,CAAclB,IADV;AAEVC,UAAAA,KAAK,EAAEe,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B;AAFG;AADA,OAAd;AAOD,KATH;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoB,KAAKzB,KAAL,CAAWG,UAAX,CAAsBC,IAA1C,MAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWG,UAAX,CAAsBE,KAAhC;AAAuC,MAAA,KAAK,EAAG;AAACqB,QAAAA,KAAK,EAAE;AAAR,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,eAQE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKT,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,CADF;AAcD;;AAxD+B;;AA2DlC,eAAetB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\n\nconst SpotifyWebApi = new Spotify();\n\nclass App extends React.Component {\n\n  constructor() {\n    // this gives us an object that has access and refresh tokens:\n    super();\n    const params = this.getHashParams();\n      this.state = {\n        loggedIn: params.access_token ? true : false,\n        nowPlaying: {\n         name: 'Not checked',\n         image: ''\n        }\n    }\n    if (params.access_token){\n      SpotifyWebApi.setAccessToken(params.access_token)\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    SpotifyWebApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            image: response.item.album.images[0]\n\n          }\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href=\"http://localhost:8888\">\n          <button> Log in with Spotify </button>\n        </a>\n        <div> Now Playing: {this.state.nowPlaying.name} </div>\n        <div>\n          <img src={this.state.nowPlaying.image} style= {{width: 100}}/>\n        </div>\n        <button onClick={() => this.getNowPlaying()}>\n          Check what's playing!\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}